{"version":3,"sources":["Menu.js","About.js","Home.js","Calc.js","Contact.js","Calculator.js","Card.js","Sdata.js","Netflix.js","App.js","serviceWorker.js","index.js"],"names":["Menu","className","to","curr","Date","getHours","greet","cssStyle","color","About","style","Home","href","target","src","alt","Calc","Contact","a","b","sub","div","mul","Calculator","Card","props","img","title","link","Sdata","Netflix","map","val","key","id","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.27e6f8e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./menustyle.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Menu = () => {\r\n  return (\r\n    <nav className=\"navstyle\">\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"Netflix\">Netflix</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"Calculator\">Calculator</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"Contact\">Contact Us</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"About\">About Us</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nvar curr = new Date().getHours();\r\nvar greet = \"\";\r\n\r\nconst cssStyle = {};\r\n\r\nif (curr >= 1 && curr < 12) {\r\n  greet = \"Good Morning\";\r\n  cssStyle.color = \"Green\";\r\n} else if (curr >= 12 && curr < 19) {\r\n  greet = \"Good Afternoon\";\r\n  cssStyle.color = \"Blue\";\r\n} else {\r\n  cssStyle.color = \"Black\";\r\n  greet = \"Good Night\";\r\n}\r\n\r\nexport { greet, curr };\r\n\r\nconst About = () => {\r\n  return (\r\n    <div1>\r\n      <div2>\r\n        <h1>\r\n          Hello sir, <span style={cssStyle}>{greet}</span>\r\n        </h1>\r\n      </div2>\r\n    </div1>\r\n  );\r\n};\r\nexport default About;\r\n","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { greet, curr } from \"./About\";\r\n\r\n\r\nconst name = \"bishu\";\r\nconst img1 = \"https://picsum.photos/250/300\";\r\nconst img4 = \"https://picsum.photos/230/300\";\r\nconst link = \"https://www.sainotech.com\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"Home\">\r\n      <h1>\r\n        Time is {greet} {curr}{\" \"}\r\n      </h1>\r\n      <h1 className=\"heading\">Hello I'm rom Home Page</h1>\r\n      <h1 className=\"ndHeading\">My name is {name}</h1>\r\n      <div className=\"imgall\">\r\n        <a href={link} target=\"bihsu\">\r\n          <img src={img1} alt=\"randomImages\" />\r\n        </a>\r\n        <Link to=\"About\">\r\n          <img src={img4} alt=\"randomImages\" />\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction sum(a, b) {\r\n  let sum = a + b;\r\n  return sum;\r\n}\r\nfunction sub(a, b) {\r\n  let sub = a - b;\r\n  return sub;\r\n}\r\nfunction div(a, b) {\r\n  let div = a / b;\r\n  return div;\r\n}\r\nfunction mul(a, b) {\r\n  let mul = a * b;\r\n  return mul;\r\n}\r\n\r\nexport { sum, sub, div, mul };\r\n\r\nconst Calc = () => {\r\n  return <h1>Hello This is Calculator</h1>;\r\n};\r\n\r\nexport default Calc;\r\n","import React from \"react\";\r\nimport Calc, { sum, sub, div, mul } from \"./Calc\";\r\nimport \"./Contact.css\";\r\nconst Contact = () => {\r\n  return (\r\n    <div>\r\n      <Calc />\r\n      <h1>\r\n        <ul>\r\n          <li>Sum is {sum(10, 20)}</li>\r\n          <li>Sub is {sub(10, 20)}</li>\r\n          <li>Div is {div(10, 20)}</li>\r\n          <li>Mul is {mul(10, 20)}</li>\r\n        </ul>\r\n      </h1>\r\n    </div>\r\n  );\r\n};\r\nexport default Contact;\r\n","import React from \"react\";\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>\r\n      <h1>Calculator</h1>\r\n      <input></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <div className=\"cards\">\r\n      <div className=\"card\">\r\n        <img src={props.img} alt={props.alt} className=\"card_img\" />\r\n        <div className=\"card_info\">\r\n          <span className=\"card_category\">A netflix Series</span>\r\n          <h3 className=\"card_title\">{props.title}</h3>\r\n          <a href={props.link} target=\"blank\">\r\n            <button>Watch Now</button>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const Sdata = [\r\n  {\r\n    title: \"SainoTech\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/250/300\",\r\n    link: \"https://www.sainotech.com\",\r\n  },\r\n  {\r\n    title: \"Facebook\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/240/300\",\r\n    link: \"https://www.Facebook.com\",\r\n  },\r\n  {\r\n    title: \"Twitter\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/230/300\",\r\n    link: \"https://www.Twitter.com\",\r\n  },\r\n  {\r\n    title: \"Canva\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/220/300\",\r\n    link: \"https://www.canva.com\",\r\n  },\r\n  {\r\n    title: \"Instagram\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/210/300\",\r\n    link: \"https://www.instagram.com\",\r\n  },\r\n  {\r\n    title: \"Google\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/200/300\",\r\n    link: \"https://www.google.com\",\r\n  },\r\n  {\r\n    title: \"SainoTech\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/150/300\",\r\n    link: \"https://www.sainotech.com\",\r\n  },\r\n  {\r\n    title: \"Facebook\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/140/300\",\r\n    link: \"https://www.Facebook.com\",\r\n  },\r\n  {\r\n    title: \"Twitter\",\r\n    alt: \"1st Movie\",\r\n    img: \"https://picsum.photos/130/300\",\r\n    link: \"https://www.Twitter.com\",\r\n  },\r\n];\r\n\r\nexport default Sdata;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\nimport \"./Netflix.css\";\r\nimport Sdata from \"./Sdata\";\r\n\r\n/*function ncard(val) {\r\n  return <Card img={val.img} alt={val.alt} link={val.link} title={val.title} />;\r\n}*/\r\n\r\n//const ncard = (val) =><Card img={val.img} alt={val.alt} link={val.link} title={val.title} />;\r\n\r\nconst Netflix = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"heading_style\">Top 6 Netflix Series</h1>\r\n      {Sdata.map((val) => (\r\n        <Card\r\n          key={val.id}\r\n          img={val.img}\r\n          alt={val.alt}\r\n          link={val.link}\r\n          title={val.title}\r\n        />\r\n      ))}\r\n      ;\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Netflix;\r\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Home from \"./Home\";\nimport Contact from \"./Contact\";\nimport About from \"./About\";\nimport Calculator from \"./Calculator\";\nimport Netflix from \"./Netflix\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Menu />\n        <Switch>\n        <Route path=\"/Calculator\" component={Calculator} />\n          <Route path=\"/Netflix\" component={Netflix} />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/About\" component={About} />\n          <Route path=\"/Contact\" component={Contact} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  ); \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}